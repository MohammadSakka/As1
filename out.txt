print_lablas_tri call1 executed in 0.0030350685119628906 sec
Name: print_lablas_tri
Type: <class 'function'>
Sign: (n)
Doc:  I print lablas triangle
Source:  @decorator
def print_lablas_tri(n):
    '''I print lablas triangle'''
    for i in range(n):
        for j in range(n-i+1):    
            print(end=" ")
        for j in range(i+1):
            print(factorial(i)//(factorial(j)*factorial(i-j)), end=" ")
 
        print()  

print_lablas_tri call1 executed in 0.0030007362365722656 sec
Name: print_lablas_tri
Type: <class 'function'>
Sign: (n)
Doc:  I print lablas triangle
Source:  @decorator
def print_lablas_tri(n):
    '''I print lablas triangle'''
    for i in range(n):
        for j in range(n-i+1):    
            print(end=" ")
        for j in range(i+1):
            print(factorial(i)//(factorial(j)*factorial(i-j)), end=" ")
 
        print()  

print_lablas_tri call1 executed in 0.0030012130737304688 sec
Name: print_lablas_tri
Type: <class 'function'>
Sign: (n)
Doc:  I print lablas triangle
Source:  @decorator
def print_lablas_tri(n):
    '''I print lablas triangle'''
    for i in range(n):
        for j in range(n-i+1):    
            print(end=" ")
        for j in range(i+1):
            print(factorial(i)//(factorial(j)*factorial(i-j)), end=" ")
 
        print()  

print_lablas_tri call1 executed in 0.015999555587768555 sec
Name: print_lablas_tri
Type: <class 'function'>
Sign: (n)
Doc:  I print lablas triangle
Source:  @decorator
def print_lablas_tri(n):
    '''I print lablas triangle'''
    for i in range(n):
        for j in range(n-i+1):    
            print(end=" ")
        for j in range(i+1):
            print(factorial(i)//(factorial(j)*factorial(i-j)), end=" ")
 
        print()  

print_lablas_tri call1 executed in 0.002997875213623047 sec
Name: print_lablas_tri
Type: <class 'function'>
Sign: (n)
Doc:  I print lablas triangle
Source:  @decorator
def print_lablas_tri(n):
    '''I print lablas triangle'''
    for i in range(n):
        for j in range(n-i+1):    
            print(end=" ")
        for j in range(i+1):
            print(factorial(i)//(factorial(j)*factorial(i-j)), end=" ")
 
        print()  

print_lablas_tri call1 executed in 0.011000394821166992 sec
Name: print_lablas_tri
Type: <class 'function'>
Sign: (n)
Doc:  I print lablas triangle
Source:  @decorator
def print_lablas_tri(n):
    '''I print lablas triangle'''
    for i in range(n):
        for j in range(n-i+1):    
            print(end=" ")
        for j in range(i+1):
            print(factorial(i)//(factorial(j)*factorial(i-j)), end=" ")
 
        print()  

